<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>cn.laifuzhi</groupId>
    <artifactId>template</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>template</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>1.8</java.version>
        <classesShadedDir>${project.build.directory}/classes-shaded</classesShadedDir>
        <classesShadedNativeDir>${classesShadedDir}/META-INF/native</classesShadedNativeDir>
        <shadingPackagePrefix>template.shade</shadingPackagePrefix>
        <shadingNettyNativePrefix>template_shade</shadingNettyNativePrefix>
        <shadingJarClassifierName>shade</shadingJarClassifierName>
        <shadeJarName>${project.build.finalName}-${shadingJarClassifierName}.${project.packaging}</shadeJarName>

        <knife4j.version>2.0.9</knife4j.version>
        <mybatis-starter.version>2.2.0</mybatis-starter.version>
        <!-- 不使用mybatis-spring-boot-starter，但是mybatis和mybatis-spring版本和mybatis-spring-boot-starter里的保持一致 -->
        <mybatis-spring.version>2.0.6</mybatis-spring.version>
        <mybatis.version>3.5.9</mybatis.version>
        <druid.version>1.2.8</druid.version>

        <redisson.version>3.16.4</redisson.version>
        <rocksdbjni.version>6.25.3</rocksdbjni.version>
        <!-- 保证grpc和etcd使用的版本相同，并处理依赖冲突-->
        <grpc.version>1.41.0</grpc.version>
        <jetcd.version>0.5.9</jetcd.version>
        <tomcat.annotation.version>6.0.53</tomcat.annotation.version>
        <!-- grpc自己的依赖版本冲突，官方不想改https://github.com/grpc/grpc-java/issues/8332 -->
        <protobuf.version>3.17.2</protobuf.version>
        <error_prone_annotations.version>2.9.0</error_prone_annotations.version>
        <!-- jetcd自己的guava依赖版本冲突 -->
        <guava.version>30.1-android</guava.version>

        <ahc.version>2.12.3</ahc.version>
        <jjwt.version>0.11.2</jjwt.version>
        <common-exec.version>1.3</common-exec.version>
        <common-cli.version>1.4</common-cli.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-net.version>3.8.0</commons-net.version>
        <fastjson.version>1.2.78</fastjson.version>
        <pf4j.version>3.6.0</pf4j.version>
        <!-- spring-boot-starter-parent中没设置的插件 -->
        <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
        <dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-bom</artifactId>
                <version>${grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.asynchttpclient</groupId>
                <artifactId>async-http-client-bom</artifactId>
                <version>${ahc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${error_prone_annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>${knife4j.version}</version>
        </dependency>

        <!-- db start -->
        <!--        <dependency>-->
        <!--            <groupId>org.mybatis.spring.boot</groupId>-->
        <!--            <artifactId>mybatis-spring-boot-starter</artifactId>-->
        <!--            <version>${mybatis-starter.version}</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson</artifactId>
            <version>${redisson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.rocksdb</groupId>
            <artifactId>rocksdbjni</artifactId>
            <version>${rocksdbjni.version}</version>
        </dependency>
        <!-- db end -->

        <dependency>
            <groupId>org.asynchttpclient</groupId>
            <artifactId>async-http-client</artifactId>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>

        <!-- grpc start-->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
        </dependency>
        <dependency> <!-- necessary for Java 9+ -->
            <groupId>org.apache.tomcat</groupId>
            <artifactId>annotations-api</artifactId>
            <version>${tomcat.annotation.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.etcd</groupId>
            <artifactId>jetcd-core</artifactId>
            <version>${jetcd.version}</version>
        </dependency>
        <!-- grpc end-->

        <!-- jjwt start -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId> <!-- or jjwt-gson if Gson is preferred -->
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- jjwt end -->

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>${common-exec.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${common-cli.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>${commons-net.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!-- api和plugin中都是provided，plugin中api也是provided，plugin需要将依赖打到jar里，否则使用的是容器中的依赖，如果容器中也没有就会报错 -->
        <dependency>
            <groupId>org.pf4j</groupId>
            <artifactId>pf4j</artifactId>
            <version>${pf4j.version}</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>local</id>
            <!-- ide中直接运行时，默认使用local -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <package.environment>local</package.environment>
            </properties>
        </profile>
        <profile>
            <id>product</id>
            <properties>
                <package.environment>prod</package.environment>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>template</finalName>

        <!-- 覆盖了spring-boot-starter-parent的配置resources配置 -->
        <resources>
            <!-- maven默认不会将src/main/java下除了代码之外的文件编译到target中 -->
            <resource>
                <directory>${project.basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <!-- 由于maven.resources.overwrite默认false，所以会优先profiles下的的配置 -->
            <resource>
                <directory>${project.basedir}/src/main/profiles/${package.environment}</directory>
            </resource>
            <!-- application.yml支持参数@@替换，spring-boot-starter-parent设置了@为占位符 -->
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>application.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>application.yml</exclude>
                </excludes>
            </resource>
        </resources>

        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>

        <plugins>
            <!-- mvn versions:set -DnewVersion=1.0.3-SNAPSHOT -->
            <!-- mvn versions:display-dependency-updates -->
            <!-- mvn versions:display-plugin-updates -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <rules>
                        <banDuplicatePomDependencyVersions/>
                        <dependencyConvergence>
                            <uniqueVersions>true</uniqueVersions>
                        </dependencyConvergence>
                        <requireMavenVersion>
                            <version>3.0.5</version>
                        </requireMavenVersion>
                        <requireJavaVersion>
                            <version>1.8.0</version>
                        </requireJavaVersion>
                    </rules>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>${protobuf-maven-plugin.version}</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                    <protoSourceRoot>src/main/resources/proto</protoSourceRoot>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>healthCheck.tmp</exclude>
                        <exclude>plugins/*</exclude>
                        <exclude>helm</exclude>
                        <exclude>kubectl</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                        <exclude>
                            <groupId>org.apache.tomcat</groupId>
                            <artifactId>annotations-api</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 打带源码的shade包，多用于客户端打包 -->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-source-plugin</artifactId>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>jar-no-fork</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->

            <!-- logback配置文件不参与打包 -->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-jar-plugin</artifactId>-->
            <!--                <version>${maven-jar-plugin.version}</version>-->
            <!--                <configuration>-->
            <!--                    <excludes>-->
            <!--                        <exclude>logback.xml</exclude>-->
            <!--                    </excludes>-->
            <!--                </configuration>-->
            <!--            </plugin>-->

            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-shade-plugin</artifactId>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>shade</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--                <configuration>-->
            <!-- 只将用到的类shade进去减小包体积，注意有些配置文件中用到的类可能不会被包含，慎用 -->
            <!--                    <minimizeJar>true</minimizeJar>-->
            <!-- 额外生成带后缀的shade包，原始的包还在 -->
            <!--                    <shadedArtifactAttached>true</shadedArtifactAttached>-->
            <!--                    <shadedClassifierName>${shadingJarClassifierName}</shadedClassifierName>-->
            <!--                    <keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>-->
            <!-- 生成shade之后的jar包的源码 -->
            <!--                    <createSourcesJar>true</createSourcesJar>-->
            <!-- 如果不设置true，shade源码包里import的还是依赖jar的类 -->
            <!--                    <shadeSourcesContent>true</shadeSourcesContent>-->
            <!-- 只将netty-all jar的代码拷贝到shade后的jar里 -->
            <!-- 不设置artifactSet默认会将所有scope不是provided、test的包拷贝进去 -->
            <!-- optional为true也会拷贝，可能以后会改 https://issues.apache.org/jira/browse/MSHADE-392 -->
            <!--                    <artifactSet>-->
            <!--                        <includes>-->
            <!--                            <include>io.netty:netty-all</include>-->
            <!--                        </includes>-->
            <!--                    </artifactSet>-->
            <!--                    <filters>-->
            <!--                        <filter>-->
            <!--                            <artifact>io.netty:netty-all</artifact>-->
            <!--                            <excludes>-->
            <!--                                <exclude>META-INF/MANIFEST.MF</exclude>-->
            <!--                            </excludes>-->
            <!--                        </filter>-->
            <!--                    </filters>-->
            <!--                    <relocations>-->
            <!--                        <relocation>-->
            <!--                            <pattern>io.netty</pattern>-->
            <!--                            <shadedPattern>${shadingPackagePrefix}.io.netty</shadedPattern>-->
            <!--                        </relocation>-->
            <!--                    </relocations>-->
            <!--                </configuration>-->
            <!--            </plugin>-->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-antrun-plugin</artifactId>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>run</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--                <configuration>-->
            <!--                    <target>-->
            <!--                        <unzip dest="${classesShadedDir}">-->
            <!--                            <fileset dir="${project.build.directory}">-->
            <!--                                <include name="${shadeJarName}"/>-->
            <!--                            </fileset>-->
            <!--                        </unzip>-->
            <!--                        <move file="${classesShadedNativeDir}/libnetty_resolver_dns_native_macos_x86_64.jnilib"-->
            <!--                              tofile="${classesShadedNativeDir}/lib${shadingNettyNativePrefix}_netty_resolver_dns_native_macos_x86_64.jnilib"/>-->
            <!--                        <move file="${classesShadedNativeDir}/libnetty_transport_native_epoll_aarch_64.so"-->
            <!--                              tofile="${classesShadedNativeDir}/lib${shadingNettyNativePrefix}_netty_transport_native_epoll_aarch_64.so"/>-->
            <!--                        <move file="${classesShadedNativeDir}/libnetty_transport_native_epoll_x86_64.so"-->
            <!--                              tofile="${classesShadedNativeDir}/lib${shadingNettyNativePrefix}_netty_transport_native_epoll_x86_64.so"/>-->
            <!--                        <move file="${classesShadedNativeDir}/libnetty_transport_native_kqueue_x86_64.jnilib"-->
            <!--                              tofile="${classesShadedNativeDir}/lib${shadingNettyNativePrefix}_netty_transport_native_kqueue_x86_64.jnilib"/>-->
            <!--                        <jar destfile="${project.build.directory}/${shadeJarName}" basedir="${classesShadedDir}"/>-->
            <!--                        <delete dir="${classesShadedDir}"/>-->
            <!--                    </target>-->
            <!--                </configuration>-->
            <!--            </plugin>-->

            <!-- 构建docker镜像 -->
            <!--            <plugin>-->
            <!--                <groupId>com.spotify</groupId>-->
            <!--                <artifactId>dockerfile-maven-plugin</artifactId>-->
            <!--                <version>${dockerfile-maven-version}</version>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>default</id>-->
            <!--                        <goals>-->
            <!--                            <goal>build</goal>-->
            <!--                            <goal>push</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--                <configuration>-->
            <!--                    <repository>spotify/foobar</repository>-->
            <!--                    <tag>${project.version}</tag>-->
            <!--                    <buildArgs>-->
            <!--                        <JAR_FILE>${project.build.finalName}.${project.packaging}</JAR_FILE>-->
            <!--                    </buildArgs>-->
            <!--                </configuration>-->
            <!--            </plugin>-->
        </plugins>
    </build>

</project>
