server:
  shutdown: graceful
#  仅支持对响应压缩，不支持对请求解压缩
  compression:
#    默认关闭
    enabled: true
#    默认2kb开启压缩
    min-response-size: 2KB
#  http请求头大小默认8k，每个请求会根据这个参数作为大小初始化字节数组，所以该参数过大在大并发时可能造成oom，所以不要盲目调大
#  https://www.jianshu.com/p/ab054620da64
  max-http-header-size: 8KB
  tomcat:
#    建立tcp连接后，等待第一次http请求收到uri的时间，超过这个时间还没有收到uri，服务端主动关闭连接
#    如果content-length请求头比实际请求体大，也会一直阻塞直到超时
    connection-timeout: 2s
#    默认取connection-timeout，空闲连接超时时间，超过这个时间还没有后续的http请求，服务端主动关闭连接
    keep-alive-timeout: 30s
#    一个keep-alive的连接最多处理请求个数，默认100，也就是超过100个请求连接就关了
#    服务端到达100次时会在响应头里增加Connection:close并关闭连接，所以最好客户端识别后主动关闭连接(可能会有双端同时发fin的情况)
#    如果客户端头铁继续发请求，服务端返回rst
    max-keep-alive-requests: -1
    max-connections: 10240
    threads:
      min-spare: 100
      max: 500
#    表单最大的post content默认2m，仅对表单的post请求生效，超出大小controller里取不到参数，设置负数代表不限制
    max-http-form-post-size: -1
#    默认2m，当请求体中未读取数据大于2m(controller中取不到参数，只有httpRequest时则不读取请求体)，则返回结果添加Connection:close并关闭连接
    max-swallow-size: -1
#    默认等待连接的队列100
#    accept-count: 100
#    resource:
#      默认缓存静态资源
#       allow-caching: true
#      没有默认值，tomcat默认ttl5秒，org.apache.catalina.webresources.Cache
#      cache-ttl: 5s

management:
  server:
    port: 8081
#  health:
#    defaults:
#      enabled: false
  endpoints:
#  默认启用全部端点，可以设置false并且通过每个端点的enable指定开启
#    enabled-by-default: false
    web:
#  默认http访问url前缀
      base-path: /actuator
#  默认只有health
      exposure:
        include: "*"
  endpoint:
    shutdown:
# 唯一默认关闭的端点
      enabled: false

spring:
#  springboot2.4新特性，不支持设置字符集。properties文件默认8859-1，使用中文需要用unicode，yml默认使用utf8
#  https://github.com/spring-projects/spring-boot/issues/28663
#  config:
#    import:
#      - optional:classpath:centerConfig.properties
#      - classpath:regionConfig.yml
#  默认路径classpath:/templates/
#  默认文件名后缀.ftlh
#  freemarker:
#    template-loader-path: classpath:/static/
  profiles:
    active: @package.environment@
  lifecycle:
#    负数相当于0，默认30s
    timeout-per-shutdown-phase: 5m
  application:
    name: template
  output:
    ansi:
      enabled: never
  main:
    banner-mode: log
#  springboot2.6新提供的配置项，默认不支持循环依赖，之前只能通过代码设置
#    allow-circular-references: false
  servlet:
    multipart:
      location: ${user.home}/upload
      # 默认1m
#      max-file-size: 1MB
      # 默认10m
#      max-request-size: 10MB
  mvc:
#    静态资源url前缀，默认没有前缀，静态资源默认跨域
    static-path-pattern: /static/**
    async:
      # 异步servlet的默认超时时间，负数代表无限
      request-timeout: 10s
  jackson:
#    默认aways返回所有字段，包含null
#    default-property-inclusion: non_null
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: true
      WRITE_DURATIONS_AS_TIMESTAMPS: true
#    取消serialization设置，按照如下设置返回格式化日期字符串
#    date-format: yyyy-MM-dd HH:mm:ss
#    time-zone: GMT+8
#  datasource:
#    url: ${mysql.url}?useUnicode=true&characterEncoding=UTF-8
#    username: ${mysql.username}
#    password: ${mysql.password}
#    hikari使用固定大小的连接池
#    hikari:
#      validation_timeout: 1500
#      connection-timeout: 2000
#      idle-timeout: 60000
#      max-lifetime: 300000
#      minimum-idle默认等于maximum-pool-size，不设置minimum-idle就是固定池
#      maximum-pool-size: 50
#  sql:
#    init:
#      encoding: utf-8
#      schema-locations: classpath:dbInit.sql
#      mode: always

  mail:
#    设置为true会使用MailSenderValidatorAutoConfiguration，spring启动时验证邮件服务是否可以连接
#    test-connection: true
#    default-encoding默认utf8
#    default-encoding: utf-8
#    默认protocol是smtp
#    protocol: smtp
    host: smtp.qq.com
    username: 757077613@qq.com
    password: 你自己的密码
#    javaMailProperties可以参考 http://www.websina.com/bugzero/kb/javamail-properties.html
    properties:
#      打印邮件日志到标准输出
#      mail.debug: true
      mail.smtp.auth: true
      mail.smtp.connectiontimeout: 5000
      mail.smtp.timeout: 3000
      mail.smtp.writetimeout: 5000

#      默认不等待，直接shutdownNow，仅仅作为触发器，不需要等待
  task:
    scheduling:
      shutdown:
        await-termination: true
        await-termination-period: 3s

#mybatis:
#  mapper-locations: classpath:mapper/*.xml
#  configuration:
#    default-statement-timeout: 10

# 自定义配置
template:
  grpcPort: 10051
  grpcThreadCount: 200
  grpcThreadQueue: 2048
  validationTimeout: 2s
  connectionTimeout: 2s
  idleTimeout: 2m
  maxLifeTime: 5m
  maximumPoolSize: 10
# sql默认超时时间，实际是服务端超时，想个性配置可以在mapper文件中单独配置timeout
  defaultDBTimeout: 10s
#  设置socketTimeout(客户端超时)和connectTimeout避免长时间阻塞到os socket超时
#  数据库sql超时时间由最底层的socketTimeout、mybatis默认statement超时、mapper中指定sql的超时共同决定，socketTimeout是最底层的，应该设置的尽量大
#  https://www.elietio.xyz/posts/ceaacf5f.html
#  https://xie.infoq.cn/article/5da78664d6b54400f3235ad5a
#  https://my.oschina.net/alchemystar/blog/3154409
#  mysql driver小于等于5.1.46、8.0.12时，url里的utf8只有server端设置了character_set_server=utf8mb4才是真正的utf8
#  mysql driver大于等于8.0.26时，不设置characterEncoding默认utf8
#  https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-reference-charsets.html
#  https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-usagenotes-troubleshooting.html
#  https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-charsets.html
  metadataDBUrl: ${mysql.url}?socketTimeout=300000&connectTimeout=2000
  metadataDBUsername: ${mysql.username}
  metadataDBPassword: ${mysql.password}
  metadataMapperLocation: classpath:mapper/*.xml
  metadataDBInitLocation: classpath:dbInit.sql
